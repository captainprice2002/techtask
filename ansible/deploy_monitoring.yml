---
- name: Monitoring Setup
  hosts: localhost
  become: true
  tasks:

    - name: Update system packages
      yum:
        name: "*"
        state: latest

    - name: Install required packages
      yum:
        name:
          - wget
          - tar
          - unzip
        state: present

    - name: Create Prometheus user and directories
      user:
        name: prometheus
      file:
        path: "{{ item }}"
        state: directory
        owner: prometheus
        group: prometheus
      with_items:
        - /etc/prometheus
        - /var/lib/prometheus

    - name: Download and install Prometheus
      shell: |
        wget https://github.com/prometheus/prometheus/releases/download/v2.46.0/prometheus-2.46.0.linux-amd64.tar.gz -O /tmp/prometheus.tar.gz
        tar -xzf /tmp/prometheus.tar.gz -C /tmp/
        mv /tmp/prometheus-2.46.0.linux-amd64/prometheus /usr/local/bin/
        mv /tmp/prometheus-2.46.0.linux-amd64/promtool /usr/local/bin/
        mv /tmp/prometheus-2.46.0.linux-amd64/consoles /etc/prometheus/
        mv /tmp/prometheus-2.46.0.linux-amd64/console_libraries /etc/prometheus/
      args:
        creates: /usr/local/bin/prometheus

    - name: Configure Prometheus
      copy:
        dest: /etc/prometheus/prometheus.yml
        content: |
          global:
            scrape_interval: 15s

          scrape_configs:
            - job_name: 'nginx'
              static_configs:
                - targets: ['localhost:80']
                  labels:
                    instance: 'nginx'

    - name: Create Prometheus systemd service
      copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus Monitoring
          Wants=network-online.target
          After=network-online.target

          [Service]
          User=prometheus
          ExecStart=/usr/local/bin/prometheus --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/var/lib/prometheus
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Start and enable Prometheus
      systemd:
        name: prometheus
        state: started
        enabled: true

    - name: Add Grafana repository
      yum_repository:
        name: grafana
        description: Grafana OSS repository
        baseurl: https://packages.grafana.com/oss/rpm
        gpgcheck: yes
        gpgkey: https://packages.grafana.com/gpg.key
        enabled: yes

    - name: Install Grafana
      yum:
        name: grafana
        state: present

    - name: Start and enable Grafana
      systemd:
        name: grafana-server
        state: started
        enabled: true

    - name: Configure Grafana data source
      uri:
        url: http://localhost:3000/api/datasources
        method: POST
        user: admin
        password: admin
        body_format: json
        body:
          name: Prometheus
          type: prometheus
          access: proxy
          url: http://localhost:9090
        status_code: 200

    - name: Upload example Grafana dashboard
      copy:
        dest: /var/lib/grafana/dashboards/nginx-dashboard.json
        content: |
          {
            "dashboard": {
              "panels": [
                {
                  "type": "graph",
                  "title": "HTTP Response Time",
                  "targets": [
                    {
                      "expr": "nginx_http_response_time"
                    }
                  ]
                },
                {
                  "type": "graph",
                  "title": "Error Rate",
                  "targets": [
                    {
                      "expr": "rate(nginx_http_errors[1m])"
                    }
                  ]
                },
                {
                  "type": "graph",
                  "title": "CPU Usage",
                  "targets": [
                    {
                      "expr": "node_cpu_seconds_total"
                    }
                  ]
                }
              ]
            }
          }

    - name: Restart Grafana to load the dashboard
      systemd:
        name: grafana-server
        state: restarted
